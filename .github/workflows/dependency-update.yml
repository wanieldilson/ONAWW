name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of updates to perform'
        required: true
        default: 'security'
        type: choice
        options:
        - security
        - all
        - major
      create_pr:
        description: 'Create pull request for updates'
        required: true
        default: true
        type: boolean

jobs:
  security-updates:
    name: Security Updates
    runs-on: ubuntu-latest
    if: github.event.inputs.update_type == 'security' || github.event.inputs.update_type == '' || github.event_name == 'schedule'
    
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install root dependencies
      run: npm install

    - name: Install backend dependencies
      run: cd backend && npm install

    - name: Install frontend dependencies
      run: cd frontend && npm install

    - name: Run security audit and fix (Backend)
      run: |
        cd backend
        echo "🔧 Fixing backend security vulnerabilities..."
        npm audit fix --audit-level moderate || echo "Some vulnerabilities may require manual intervention"
        
    - name: Run security audit and fix (Frontend)
      run: |
        cd frontend
        echo "🔧 Fixing frontend security vulnerabilities..."
        npm audit fix --audit-level moderate || echo "Some vulnerabilities may require manual intervention"

    - name: Check for changes
      id: changes
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "📝 Changes detected in dependencies"
        else
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "✅ No security updates needed"
        fi

    - name: Create Pull Request
      if: steps.changes.outputs.changes == 'true' && (github.event.inputs.create_pr == 'true' || github.event.inputs.create_pr == '')
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'security: update dependencies with security vulnerabilities'
        title: '🔒 Security: Update dependencies with vulnerabilities'
        body: |
          ## Security Dependency Updates
          
          This PR contains automatic security updates for dependencies with known vulnerabilities.
          
          ### Changes Made
          - ✅ Updated backend dependencies with security fixes
          - ✅ Updated frontend dependencies with security fixes
          - ✅ Ran `npm audit fix` to resolve moderate and high severity issues
          
          ### Testing Required
          - [ ] Verify application builds successfully
          - [ ] Run full test suite
          - [ ] Test critical user flows
          - [ ] Verify Docker image builds
          
          ### Security Impact
          This update addresses security vulnerabilities in dependencies. Review the changes and test thoroughly before merging.
          
          ---
          
          🤖 This PR was created automatically by the dependency update workflow.
        branch: security/dependency-updates-${{ github.run_number }}
        delete-branch: true
        labels: |
          security
          dependencies
          automated

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event.inputs.update_type == 'all' || github.event.inputs.update_type == 'major'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        npm install
        cd backend && npm install
        cd ../frontend && npm install

    - name: Check for outdated dependencies (Backend)
      run: |
        cd backend
        echo "## Backend Outdated Dependencies" >> ../dependency-report.md
        echo "\`\`\`" >> ../dependency-report.md
        npm outdated || true >> ../dependency-report.md
        echo "\`\`\`" >> ../dependency-report.md
        echo "" >> ../dependency-report.md

    - name: Check for outdated dependencies (Frontend)
      run: |
        cd frontend
        echo "## Frontend Outdated Dependencies" >> ../dependency-report.md
        echo "\`\`\`" >> ../dependency-report.md
        npm outdated || true >> ../dependency-report.md
        echo "\`\`\`" >> ../dependency-report.md
        echo "" >> ../dependency-report.md

    - name: Generate security report
      run: |
        echo "## Security Audit Report" >> dependency-report.md
        echo "" >> dependency-report.md
        echo "### Backend Security Audit" >> dependency-report.md
        echo "\`\`\`" >> dependency-report.md
        cd backend && npm audit || true >> ../dependency-report.md
        echo "\`\`\`" >> ../dependency-report.md
        echo "" >> ../dependency-report.md
        echo "### Frontend Security Audit" >> ../dependency-report.md
        echo "\`\`\`" >> ../dependency-report.md
        cd ../frontend && npm audit || true >> ../dependency-report.md
        echo "\`\`\`" >> ../dependency-report.md

    - name: Upload dependency report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-report
        path: dependency-report.md

  renovate-config-check:
    name: Check Renovate Configuration
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Check if Renovate config exists
      id: renovate-check
      run: |
        if [[ -f "renovate.json" ]] || [[ -f ".renovaterc.json" ]] || [[ -f ".github/renovate.json" ]]; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Create Renovate configuration
      if: steps.renovate-check.outputs.exists == 'false'
      run: |
        cat > renovate.json << 'EOF'
        {
          "$schema": "https://docs.renovatebot.com/renovate-schema.json",
          "extends": [
            "config:base",
            "security:openssf-scorecard"
          ],
          "schedule": ["before 6am on monday"],
          "timezone": "UTC",
          "labels": ["dependencies"],
          "assignees": ["@${{ github.repository_owner }}"],
          "packageRules": [
            {
              "matchUpdateTypes": ["minor", "patch"],
              "matchCurrentVersion": "!/^0/",
              "automerge": true,
              "automergeType": "pr"
            },
            {
              "matchPackagePatterns": ["^@types/"],
              "automerge": true,
              "automergeType": "pr"
            },
            {
              "matchDepTypes": ["devDependencies"],
              "matchUpdateTypes": ["minor", "patch"],
              "automerge": true,
              "automergeType": "pr"
            }
          ],
          "vulnerabilityAlerts": {
            "labels": ["security", "dependencies"],
            "assignees": ["@${{ github.repository_owner }}"]
          },
          "lockFileMaintenance": {
            "enabled": true,
            "schedule": ["before 6am on monday"]
          }
        }
        EOF

    - name: Create Pull Request for Renovate config
      if: steps.renovate-check.outputs.exists == 'false'
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: add renovate configuration for automated dependency updates'
        title: '🤖 Add Renovate configuration for dependency management'
        body: |
          ## Renovate Configuration
          
          This PR adds a Renovate configuration to automate dependency updates.
          
          ### Features
          - 🔒 Security vulnerability alerts with high priority
          - 🔄 Weekly dependency updates (Mondays before 6am UTC)
          - ✅ Auto-merge for minor/patch updates of stable packages
          - 🏷️ Proper labeling and assignment
          - 📦 Lock file maintenance
          
          ### Benefits
          - Keeps dependencies up-to-date automatically
          - Reduces security vulnerabilities
          - Saves manual maintenance time
          - Provides consistent update schedule
          
          ---
          
          🤖 This PR was created automatically by the dependency update workflow.
        branch: chore/add-renovate-config
        delete-branch: true
        labels: |
          enhancement
          dependencies
          automated
