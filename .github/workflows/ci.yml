name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        npm install
        cd backend && npm install
        cd ../frontend && npm install

    - name: Lint frontend
      run: cd frontend && npm run lint
      continue-on-error: true

    - name: Run backend tests
      run: cd backend && npm test -- --passWithNoTests

    - name: Run frontend tests
      run: cd frontend && npm test -- --passWithNoTests --watchAll=false

    - name: Build backend
      run: cd backend && npm run build

    - name: Build frontend
      run: cd frontend && npm run build

    - name: Verify build artifacts
      run: |
        echo "‚úÖ Checking build outputs..."
        ls -la backend/dist/
        ls -la frontend/dist/

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: test-and-build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: onaww:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        echo "‚úÖ Docker image built successfully"
        docker images | grep onaww

  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        npm install
        cd backend && npm install
        cd ../frontend && npm install

    - name: Run security audit
      run: |
        echo "üîç Backend security audit..."
        cd backend && npm audit --audit-level moderate || echo "Backend audit completed with warnings"
        echo "üîç Frontend security audit..."
        cd ../frontend && npm audit --audit-level moderate || echo "Frontend audit completed with warnings"
      continue-on-error: true

