name: Security Audit

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security audit daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  security-audit:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v5
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Install dependencies
      run: |
        cd backend && npm install
        cd ../frontend && npm install
        
    - name: Run npm audit (Backend)
      run: |
        cd backend
        npm audit --audit-level=moderate
      continue-on-error: true
      
    - name: Run npm audit (Frontend) 
      run: |
        cd frontend
        npm audit --audit-level=moderate
      continue-on-error: true
      
    - name: Run Snyk security scan (Backend)
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        cd backend
        npx snyk test --severity-threshold=medium
      continue-on-error: true
      
    - name: Run Snyk security scan (Frontend)
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        cd frontend
        npx snyk test --severity-threshold=medium
      continue-on-error: true
      
    - name: Monitor with Snyk (Backend)
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        cd backend
        npx snyk monitor
      if: github.ref == 'refs/heads/main'
      continue-on-error: true
      
    - name: Monitor with Snyk (Frontend)
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        cd frontend
        npx snyk monitor
      if: github.ref == 'refs/heads/main'
      continue-on-error: true

  docker-security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build Docker image
      run: docker build -t onaww:security-test .
      
    - name: Run Snyk container scan
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        npx snyk container test onaww:security-test --severity-threshold=medium
      continue-on-error: true

